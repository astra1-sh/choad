name: Build & Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Run Tests
        run: cargo test --target ${{ matrix.target }}

      - name: Verify Binary Exists (Unix)
        if: runner.os != 'Windows'
        run: |
          if [ ! -f target/${{ matrix.target }}/release/choad ]; then
            echo "Binary not found!"
            exit 1
          fi

      - name: Verify Binary Exists (Windows)
        if: runner.os == 'Windows'
        run: |
          if (-not (Test-Path -Path "target\${{ matrix.target }}\release\choad.exe")) {
            Write-Error "Binary not found!"
            exit 1
          }